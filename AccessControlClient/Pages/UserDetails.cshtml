@page "/userDetails/{UserId}"
@inject HttpClient Http

<div class="col-sm-1">
</div>
<div class="col-sm-6">
    <h1>User details</h1>
    <form class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-3">First name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.firstName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Middle name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.middleName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Last name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.lastName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Email</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.email" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Phone</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.phoneNumber" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User type</label>
            <div class="col-sm-9">
                <select class="form-control" bind="@_userDetails.userType">
                    @foreach (var userType in Enum.GetValues(typeof(UserType)))
                    {
                        <option value=@userType>@userType</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Company</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.company" />*@
                <select class="form-control" bind="@_userDetails.company">
                    @foreach (var company in _companies)
                    {
                        <option value=@company.name>@company.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Department</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.department" />*@
                <select class="form-control" bind="@_userDetails.department">
                    @foreach (var department in _departments)
                    {
                        <option value=@department.name>@department.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User title</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.userTitle" />*@
                <select class="form-control" bind="@_userDetails.userTitle">
                    @foreach (var userTitle in _userTitles)
                    {
                        <option value=@userTitle.name>@userTitle.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Access level</label>
            <div class="col-sm-9">
                <input class="form-control" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Activation date</label>
            <div class="col-sm-9">
                <input type="datetime" class="form-control" bind="@_userDetails.activationDate" format-value="yyyy-MM-dd HH:mm" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Expiration date</label>
            <div class="col-sm-9">
                <input type="datetime" class="form-control" placeholder="0001-01-01 00:00" bind="@_userDetails.expirationDate" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 1</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional1" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 2</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional2" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 3</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional3" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <button class="btn btn-default">Save</button>
            </div>
        </div>
    </form>
</div>
<div class="col-sm-5">
</div>

@functions {
    //const string BaseUrl = "http://localhost:58009/api";
    const string BaseUrl = "http://hub.midpoint.lt:58009/api";

    public string UserId { get; set; }
    User _user = new User();
    public UserDetailModel _userDetails { get; set; } = new UserDetailModel();

    private UserTitle[] _userTitles = Array.Empty<UserTitle>();
    private Department[] _departments = Array.Empty<Department>();
    private Company[] _companies = Array.Empty<Company>();

    protected override async void OnInit()
    {
        var additionalInfo = new AdditionalInfo();

        Console.WriteLine(UserId);

        _user = await Http.GetJsonAsync<User>($"{BaseUrl}/users/{UserId}");

        if (_user.companyId != null)
        {
            var company = await Http.GetJsonAsync<Company>($"{BaseUrl}/locations/1/companies/{_user.companyId}");

            additionalInfo.company = company.name;

            Console.WriteLine(company.name);
        }

        if (_user.departmentId != null)
        {
            var department = await Http.GetJsonAsync<Department>($"{BaseUrl}/locations/1/departments/{_user.departmentId}");

            additionalInfo.department = department.name;

            Console.WriteLine(department.name);
        }

        if (_user.userTitleId != null)
        {
            var userTitle = await Http.GetJsonAsync<UserTitle>($"{BaseUrl}/locations/1/usertitles/{_user.userTitleId}");

            additionalInfo.userTitle = userTitle.name;

            Console.WriteLine(userTitle.name);
        }

        // need access levels also

        _userDetails = MapUserData(_user, additionalInfo);

        // additional info
        var departments = await Http.GetJsonAsync<IEnumerable<Department>>($"{BaseUrl}/locations/1/departments");

        var userTitles = await Http.GetJsonAsync<IEnumerable<UserTitle>>($"{BaseUrl}/locations/1/usertitles");

        var companies = await Http.GetJsonAsync<IEnumerable<Company>>($"{BaseUrl}/locations/1/companies");

        _companies = companies.OrderBy(u => u.name).ToArray();
        _departments = departments.OrderBy(u => u.name).ToArray();
        _userTitles = userTitles.OrderBy(u => u.name).ToArray();

        StateHasChanged();
    }

    private UserDetailModel MapUserData(User user, AdditionalInfo additionalInfo)
    {
        return new UserDetailModel
        {
            id = user.id,
            firstName = user.firstName,
            middleName = user.middleName,
            lastName = user.lastName,
            email = user.email,
            phoneNumber = user.phoneNumber,
            userType = user.userType,
            company = additionalInfo.company,
            department = additionalInfo.department,
            userTitle = additionalInfo.userTitle,
            activationDate = user.activationDate,
            expirationDate = user.expirationDate?.ToString("yyyy-MM-dd HH:mm"),
            additional1 = user.additional1,
            additional2 = user.additional2,
            additional3 = user.additional3
        };
    }

    private async void UserAccessLevels(int userId)
    {
        var userAccesslevels = await Http.GetJsonAsync<IEnumerable<UserAccessLevel>>($"{BaseUrl}/users/{UserId}/accesslevels");

        var accesslevels = await Http.GetJsonAsync<IEnumerable<AccessLevel>>($"{BaseUrl}/locations/1/accesslevels");

        // get access levels names
    }

    private class AdditionalInfo
    {
        public string company { get; set; }
        public string department { get; set; }
        public string userTitle { get; set; }
    }

    public class UserDetailModel
    {
        public int id { get; set; }

        public string firstName { get; set; }

        public string lastName { get; set; }

        public string middleName { get; set; }

        public string email { get; set; }

        public string phoneNumber { get; set; }

        public UserType userType { get; set; }

        public string company { get; set; }

        public string department { get; set; }

        public string userTitle { get; set; }

        public DateTime activationDate { get; set; }

        public string expirationDate { get; set; }

        public string additional1 { get; set; }

        public string additional2 { get; set; }

        public string additional3 { get; set; }

        public string version { get; set; }
    }
}