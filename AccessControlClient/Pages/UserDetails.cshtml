@page "/userDetails/{UserId}"
@inject HttpClient Http

<div class="col-sm-1">
</div>
<div class="col-sm-6">
    <h1>User details</h1>
    <form action="/action_page.php">
        <div class="form-group">
            <label>First name:</label>
            <input class="form-control" bind="@_userDetails.firstName"/>
        </div>
        <div class="form-group">
            <label>Middle name:</label>
            <input class="form-control" bind="@_userDetails.middleName"/>
        </div>
        <div class="form-group">
            <label>Last name:</label>
            <input class="form-control" bind="@_userDetails.lastName"/>
        </div>
        <div class="form-group">
            <label>Email:</label>
            <input class="form-control" bind="@_userDetails.email"/>
        </div>
        <div class="form-group">
            <label>Phone:</label>
            <input class="form-control" bind="@_userDetails.phoneNumber"/>
        </div>
        <div class="form-group">
            <label>User type:</label>
            <select class="form-control" bind="@_userDetails.userType">
                @foreach (var userType in Enum.GetValues(typeof(UserType)))
                {
                    if ((UserType)userType == UserType.Employee)
                    {
                        <option value=@userType selected> @userType </option>
                    }
                    else
                    {
                        <option value=@userType> @userType </option>
                    }
                }
            </select>
        </div>
        <div class="form-group">
            <label>Company</label>
            <input class="form-control" bind="@_userDetails.company"/>
        </div>
        <div class="form-group">
            <label>Department</label>
            <input class="form-control" bind="@_userDetails.department"/>
        </div>
        <div class="form-group">
            <label>User title</label>
            <input class="form-control" bind="@_userDetails.userTitle"/>
        </div>
        <div class="form-group">
            <label>Activation date:</label>
            <input type="datetime" class="form-control" bind="@_userDetails.activationDate" format-value="yyyy-MM-dd HH:mm"/>
        </div>
        <div class="form-group">
            <label>Expiration date:</label>
            <input type="datetime" class="form-control" placeholder="0001-01-01 00:00" bind="@_userDetails.expirationDate"/>
        </div>
        <div class="form-group">
            <label>Additional 1</label>
            <input class="form-control" bind="@_userDetails.additional1"/>
        </div>
        <div class="form-group">
            <label>Additional 2</label>
            <input class="form-control" bind="@_userDetails.additional2"/>
        </div>
        <div class="form-group">
            <label>Additional 3</label>
            <input class="form-control" bind="@_userDetails.additional3"/>
        </div>
        <div class="form-group">
            <button class="btn btn-default">Save</button>
        </div>
        @*<div class="form-group">
            <label class="control-label col-sm-3">Company:</label>
            <div class="col-sm-9">
                <input list="companies" class="form-control" @bind(_user.Company)>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Department:</label>
            <div class="col-sm-9">
                <input list="departments" class="form-control" @bind(_user.Department)>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User title:</label>
            <div class="col-sm-9">
                <input list="userTitles" class="form-control" @bind(_user.UserTitle)>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Activation date:</label>
            <div class="col-sm-9">
                <input type="datetime-local" class="form-control" value="2017-06-01T08:30" @bind(_user.MiddleName)>
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <button @onclick(async () => await AddUserToDb()) class="btn btn-default">Save</button>
            </div>
        </div>*@
    </form>
</div>
<div class="col-sm-5">
</div>

@functions {
    public string UserId { get; set; }
    User _user = new User();
    public UserDetailModel _userDetails { get; set; } = new UserDetailModel();

    protected override async void OnInit()
    {
        var additionalInfo = new AdditionalInfo();

        Console.WriteLine(UserId);

        var url = $"http://localhost:58009/api/users/{UserId}";

        _user = await Http.GetJsonAsync<User>(url);

        if (_user.companyId != null)
        {
            url = $"http://localhost:58009/api/locations/1/companies/{_user.companyId}";

            var company = await Http.GetJsonAsync<Company>(url);

            additionalInfo.company = company.name;

            Console.WriteLine(company.name);
        }

        if (_user.departmentId != null)
        {
            url = $"http://localhost:58009/api/locations/1/departments/{_user.departmentId}";

            var department = await Http.GetJsonAsync<Department>(url);

            additionalInfo.department = department.name;

            Console.WriteLine(department.name);
        }

        if (_user.userTitleId != null)
        {
            url = $"http://localhost:58009/api/locations/1/usertitles/{_user.userTitleId}";

            var userTitle = await Http.GetJsonAsync<UserTitle>(url);

            additionalInfo.userTitle = userTitle.name;

            Console.WriteLine(userTitle.name);
        }

        // need access levels also

        _userDetails = MapUserData(_user, additionalInfo);

        StateHasChanged();
    }

    private UserDetailModel MapUserData(User user, AdditionalInfo additionalInfo)
    {
        return new UserDetailModel
        {
            id = user.id,
            firstName = user.firstName,
            middleName = user.middleName,
            lastName = user.lastName,
            email = user.email,
            phoneNumber = user.phoneNumber,
            userType = user.userType,
            company = additionalInfo.company,
            department = additionalInfo.department,
            userTitle = additionalInfo.userTitle,
            activationDate = user.activationDate,
            expirationDate = user.expirationDate?.ToString("yyyy-MM-dd HH:mm"),
            additional1 = user.additional1,
            additional2 = user.additional2,
            additional3 = user.additional3
        };
    }

    private async void UserAccessLevels(int userId)
    {
        var url = $"http://localhost:58009/api/users/{UserId}/accesslevels";

        var userAccesslevels = await Http.GetJsonAsync<IEnumerable<UserAccessLevel>>(url);

        url = $" /api/locations/1/accesslevels";

        var accesslevels = await Http.GetJsonAsync<IEnumerable<AccessLevel>>(url);

        // get access levels names


    }

    private class AdditionalInfo
    {
        public string company { get; set; }
        public string department { get; set; }
        public string userTitle { get; set; }
    }

    public class UserDetailModel
    {
        public int id { get; set; }

        public string firstName { get; set; }

        public string lastName { get; set; }

        public string middleName { get; set; }

        public string email { get; set; }

        public string phoneNumber { get; set; }

        public UserType userType { get; set; }

        public string company { get; set; }

        public string department { get; set; }

        public string userTitle { get; set; }

        public DateTime activationDate { get; set; }

        public string expirationDate { get; set; }

        public string additional1 { get; set; }

        public string additional2 { get; set; }

        public string additional3 { get; set; }

        public string version { get; set; }
    }
}