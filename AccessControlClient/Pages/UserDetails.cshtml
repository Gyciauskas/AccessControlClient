@page "/userDetails/{UserId}"
@inject HttpClient Http
@inherits ComponentBases

<div class="col-sm-1">
</div>
<div class="col-sm-6">
    <h1>User details</h1>
    <form class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-3">First name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.firstName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Middle name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.middleName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Last name</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.lastName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Email</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.email" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Phone</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.phoneNumber" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User type</label>
            <div class="col-sm-9">
                <select class="form-control" bind="@_userDetails.userType">
                    @foreach (var userType in Enum.GetValues(typeof(UserType)))
                    {
                        <option value=@userType>@userType</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Company</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.company" />*@
                <select class="form-control" bind="@_userDetails.company">
                    <option value=""></option>
                    @foreach (var company in _companies)
                    {
                        <option value=@company.name>@company.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Department</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.department" />*@
                <select class="form-control" bind="@_userDetails.department">
                    <option value=""></option>
                    @foreach (var department in _departments)
                    {
                        <option value=@department.name>@department.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User title</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.userTitle" />*@
                <select class="form-control" bind="@_userDetails.userTitle">
                    <option value=""></option>
                    @foreach (var userTitle in _userTitles)
                    {
                        <option value=@userTitle.name>@userTitle.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Access level</label>
            <div class="col-sm-9">
                @*<input class="form-control" bind="@_userDetails.userAccesslevel" />*@
                <select class="form-control" bind="@_userDetails.userAccesslevel">
                    <option value=""></option>
                    @foreach (var assignableUserAccessLevels in _assignableUserAccessLevels)
                    {
                        <option value=@assignableUserAccessLevels.name>@assignableUserAccessLevels.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Activation date</label>
            <div class="col-sm-9">
                <input type="datetime" class="form-control" bind="@_userDetails.activationDate" format-value="yyyy-MM-dd HH:mm" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Expiration date</label>
            <div class="col-sm-9">
                <input type="datetime" class="form-control" placeholder="0001-01-01 00:00" bind="@_userDetails.expirationDate" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 1</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional1" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 2</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional2" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 3</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_userDetails.additional3" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <button onclick="@(async ()=> await UpdateUser())" class="btn btn-default">Save</button>
            </div>
        </div>
    </form>
</div>
<div class="col-sm-5">
</div>

@functions {
    public string UserId { get; set; }
    SpecificUser _user = new SpecificUser();
    public UserModel _userDetails { get; set; } = new UserModel();

    private UserTitle[] _userTitles = Array.Empty<UserTitle>();
    private Department[] _departments = Array.Empty<Department>();
    private Company[] _companies = Array.Empty<Company>();
    private AssignableUserAccessLevel[] _assignableUserAccessLevels = Array.Empty<AssignableUserAccessLevel>();

    protected override async void OnInit()
    {
        var additionalInfo = new AdditionalInfo();

        _user = await UserRepository.GetUserAsync(int.Parse(UserId));

        if (_user.companyId != null)
        {
            var company = await CompanyRepository.GetCompanyAsync((int)_user.companyId);

            additionalInfo.company = company.name;

            Console.WriteLine(company.name);
        }

        if (_user.departmentId != null)
        {
            var department = await DepartmentRepository.GetDepartmentAsync((int)_user.departmentId);

            additionalInfo.department = department.name;

            Console.WriteLine(department.name);
        }

        if (_user.userTitleId != null)
        {
            var userTitle = await UserTitleRepository.GetUserTitleAsync((int)_user.userTitleId);

            additionalInfo.userTitle = userTitle.name;

            Console.WriteLine(userTitle.name);
        }

        // need access levels
        var userAccesslevels = await UserRepository.GetUserAccesslevels(_user.id);

        Console.WriteLine($"accesslevels: {userAccesslevels.Count()}");

        if (userAccesslevels.Any())
            additionalInfo.accesslevel = userAccesslevels.First().name;

        var assignableUserAccesslevels = await UserRepository.GetAssignableUserAccessLevels(_user.id);

        _userDetails = MapUserData(_user, additionalInfo);

        // additional info
        var departments = await DepartmentRepository.GetDepartmentsAsync();

        var userTitles = await UserTitleRepository.GetUserTitlesAsync();

        var companies = await CompanyRepository.GetCompaniesAsync();

        _companies = companies.ToArray();
        _departments = departments.ToArray();
        _userTitles = userTitles.ToArray();
        _assignableUserAccessLevels = assignableUserAccesslevels.ToArray();

        Console.WriteLine($"user accesslevel: {_userDetails.userAccesslevel}");

        StateHasChanged();
    }

    private async Task UpdateUser()
    {
        _user.firstName = _userDetails.firstName;
        _user.middleName = _userDetails.middleName;
        _user.lastName = _userDetails.lastName;
        _user.email = _userDetails.email;
        _user.phoneNumber = _userDetails.phoneNumber;
        _user.userType = _userDetails.userType;
        _user.additional1 = _userDetails.additional1;
        _user.additional2 = _userDetails.additional2;
        _user.additional3 = _userDetails.additional3;

        // company
        if (!string.IsNullOrEmpty(_userDetails.company))
            _user.companyId = _companies.First(c => c.name == _userDetails.company).id;
        else
            _user.companyId = null;

        // department
        if (!string.IsNullOrEmpty(_userDetails.department))
            _user.departmentId = _departments.First(c => c.name == _userDetails.department).id;
        else
            _user.departmentId = null;

        // userTitle
        if (!string.IsNullOrEmpty(_userDetails.userTitle))
            _user.userTitleId = _userTitles.First(c => c.name == _userDetails.userTitle).id;
        else
            _user.userTitleId = null;

        await UserRepository.UpdateUserAsync(_user);
    }

    private UserModel MapUserData(SpecificUser user, AdditionalInfo additionalInfo)
    {
        return new UserModel
        {
            id = user.id,
            firstName = user.firstName,
            middleName = user.middleName,
            lastName = user.lastName,
            email = user.email,
            phoneNumber = user.phoneNumber,
            userType = user.userType,
            company = additionalInfo.company,
            department = additionalInfo.department,
            userTitle = additionalInfo.userTitle,
            userAccesslevel = additionalInfo.accesslevel,
            activationDate = user.activationDate,
            expirationDate = user.expirationDate?.ToString("yyyy-MM-dd HH:mm"),
            additional1 = user.additional1,
            additional2 = user.additional2,
            additional3 = user.additional3
        };
    }

    private class AdditionalInfo
    {
        public string company { get; set; }
        public string department { get; set; }
        public string userTitle { get; set; }
        public string accesslevel { get; set; }
    }
}