@page "/addUser"
@inherits ComponentBases
@inject HttpClient Http

<div class="col-sm-6">
    <h1>Create new user</h1>
    <form class="form-horizontal">
        <div class="form-group">
            <label class="control-label col-sm-3">First name</label>
            <div class="col-sm-9">
                <input class="form-control" placeholder="Enter first name" bind="@_user.firstName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Last name</label>
            <div class="col-sm-9">
                <input class="form-control" placeholder="Enter last name" bind="@_user.lastName" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Email</label>
            <div class="col-sm-9">
                <input class="form-control" placeholder="Enter email" bind="@_user.email" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Phone</label>
            <div class="col-sm-9">
                <input class="form-control" placeholder="Enter phone number" bind="@_user.phoneNumber" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User type</label>
            <div class="col-sm-9">
                <select class="form-control" bind="@_user.userType">
                    @foreach (var userType in Enum.GetValues(typeof(UserType)))
                    {
                        <option value=@userType>@userType</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Company</label>
            <div class="col-sm-9">
                @*<input list="_companies" class="form-control" @bind(_user.Company)>*@
                <select class="form-control" bind="@_user.company">
                    <option value=""></option>
                    @foreach (var company in _companies)
                    {
                        <option value=@company.name>@company.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Department</label>
            <div class="col-sm-9">
                @*<input list="_departments" class="form-control" @bind(_user.Department)>*@
                <select class="form-control" bind="@_user.department">
                    <option value=""></option>
                    @foreach (var department in _departments)
                    {
                        <option value=@department.name>@department.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">User title</label>
            <div class="col-sm-9">
                @*<input list="_userTitles" class="form-control" @bind(_user.UserTitle)>*@
                <select class="form-control" bind="@_user.userTitle">
                    <option value=""></option>
                    @foreach (var userTitle in _userTitles)
                    {
                        <option value=@userTitle.name>@userTitle.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Access level</label>
            <div class="col-sm-9">
                <select class="form-control" bind="@_user.userAccesslevel">
                    <option value=""></option>
                    @foreach (var accesslevel in _accessLevels)
                    {
                        <option value=@accesslevel.name>@accesslevel.name</option>
                    }
                </select>
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Activation date</label>
            <div class="col-sm-9">
                <input type="datetime" class="form-control" bind="@_user.activationDate" format-value="yyyy-MM-dd HH:mm" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Expiration date</label>
            <div class="col-sm-9">
                <input class="form-control" placeholder="0001-01-01 00:00" bind="@_user.expirationDate" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 1</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_user.additional1" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 2</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_user.additional2" />
            </div>
        </div>
        <div class="form-group">
            <label class="control-label col-sm-3">Additional 3</label>
            <div class="col-sm-9">
                <input class="form-control" bind="@_user.additional3" />
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-sm-9">
                <button onclick="@(async ()=> await AddUserToDb())" class="btn btn-default">Save</button>
            </div>
        </div>
    </form>
</div>
<div class="col-sm-6">
</div>

@functions {
    //const string BaseUrl = "http://localhost:58009/api";
    const string BaseUrl = "http://hub.midpoint.lt:58009/api";

    public UserModel _user { get; set; } = new UserModel { activationDate = DateTime.Now, userType = UserType.Employee };

    private UserTitle[] _userTitles = Array.Empty<UserTitle>();
    private Department[] _departments = Array.Empty<Department>();
    private Company[] _companies = Array.Empty<Company>();
    private AccessLevel[] _accessLevels = Array.Empty<AccessLevel>();

    protected override async Task OnInitAsync()
    {
        var departments = await DepartmentRepository.GetDepartmentsAsync();

        var companies = await CompanyRepository.GetCompaniesAsync();

        var userTitles = await UserTitleRepository.GetUserTitlesAsync();

        var accesslevels = await AccessLevelRepository.GetAccessLevelsAsync();

        _companies = companies.ToArray();
        _departments = departments.ToArray();
        _userTitles = userTitles.ToArray();
        _accessLevels = accesslevels.ToArray();
    }

    private async Task AddUserToDb()
    {
        var createUser = new CreateUser
        {
            FirstName = _user.firstName,
            LastName = _user.lastName,
            Email = _user.email,
            PhoneNumber = _user.phoneNumber,
            UserType = _user.userType,
        };

        // Company
        var company = _companies.Where(c => c.name == _user.company).FirstOrDefault();

        if (company != null)
            createUser.CompanyId = company.id;

        // Department
        var department = _departments.Where(c => c.name == _user.department).FirstOrDefault();

        if (department != null)
            createUser.DepartmentId = department.id;

        // User title
        var userTitle = _userTitles.Where(c => c.name == _user.userTitle).FirstOrDefault();

        if (userTitle != null)
            createUser.UserTitleId = userTitle.id;

        createUser.ActivationDate = _user.activationDate;

        //if (string.IsNullOrEmpty(_user.expirationDate))
        //createUser.ExpirationDate = date; // format-value="yyyy-MM-dd HH:mm"

        var result = await Http.PostJsonAsync<int>($"{BaseUrl}/users", createUser);

        Console.WriteLine($"User ID: {result}");

        // Add access level
        if (result > 0)
        {
            var accesslevel = _accessLevels.Where(c => c.name == _user.userAccesslevel).FirstOrDefault();

            if (accesslevel != null)
            {
                var userAccesslevel = new CreateUserAccesslevel
                {
                    AccessLevelId = accesslevel.id,
                    ActivationDate = _user.activationDate,
                    ExpirationDate = null,
                    UseLimit = 0,
                    Status = UserAccessLevelStatus.Active
                };

                var rez = await Http.PostJsonAsync<int>($"{BaseUrl}/users/{result}/accesslevels", userAccesslevel);

                Console.WriteLine($"Access level ID: {result}");
            }
        }
    }
}



